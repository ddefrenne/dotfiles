# run-shell "powerline-daemon -q"
# source "/Library/Python/2.7/site-packages/powerline/bindings/tmux/powerline.conf"
# -------------------
# Config
# -------------------
# set -g mouse on
# set the delay between prefix and command
set -s escape-time 1

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# make sure tmux is set to 256 colors
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# identifying activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# increase repeat time for repeatable commands
set -g repeat-time 1000

# Set the command used for new windows to $SHELL
set-option -g default-command $SHELL

# increase history
set-option -g history-limit 5000

# -------------------
# Keys
# -------------------

# Set the prefix from C-b to C-s
unbind C-b
set -g prefix C-s

# use C-s r to reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ensure that we can send C-a to other apps by pressing it twice
bind C-s send-prefix

# use these to split vertically and horizontally
unbind %
bind | split-window -h
unbind '"'
bind - split-window -v

set-window-option -g xterm-keys on

# use vim-motions to switch panes
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# resizing panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# clear screen and history
bind-key b send-keys -R \; clear-history

# same as Ctrl+k in terminal
bind C-k send-keys -R \; clear-history \; send-keys C-l \; display "History cleared!"

set -g set-clipboard on
# brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Don't change the names of windows I change
set-option -g allow-rename off

# -------------------
# Colors
# -------------------
#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg colour251 #base02
set-option -g status-fg yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg colour251
set-window-option -g window-status-attr bold

# active window title colors
set-window-option -g window-status-current-fg brightred
set-window-option -g window-status-current-bg colour251

# windows with activity
set-window-option -g window-status-activity-bg colour251
set-window-option -g window-status-activity-fg colour026
set-window-option -g window-status-activity-attr bold

# pane coloring
set-option -g pane-border-fg colour251

set-option -g pane-active-border-fg brightgreen

# customize the command line
set-option -g message-fg brightred
set-option -g message-bg colour251
set-option -g message-attr bright

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

set -g status-position bottom
set -g status-justify centre

set -g status-left-length 40
set -g status-left "#[bold]#[bg=colour251]#[fg=colour026]#S #[fg=colour161]#I #[fg=colour196]#P"
set -g status-right "#[bold]#[fg=colour233]%d %b %R "

# set -g status-utf8 on

# clock
# set-window-option -g clock-m-colour green #green
